C51 COMPILER V9.54   DS18                                                                  06/03/2024 10:47:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18
OBJECT MODULE PLACED IN ..\output\DS18.obj
COMPILER INVOKED BY: E:\KeilC51\C51\BIN\C51.EXE ..\bsp\DS18\DS18.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\bsp\DS;..\bsp\LCD;
                    -..\user;..\bsp\DS18;..\bsp\timer) DEBUG OBJECTEXTEND PRINT(.\Listings\DS18.lst) OBJECT(..\output\DS18.obj)

line level    source

   1          #include "public.h"
   2          #include "intrins.h"
   3          
   4          /*******************************************************************************
   5          * 函 数 名         : ds18b20_reset
   6          * 函数功能                 : 复位DS18B20  
   7          * 输    入         : 无
   8          * 输    出         : 无
   9          *******************************************************************************/
  10          void ds18b20_reset(void)
  11          {
  12   1              //// 根据时序图, MCU拉低总线 （DQ?）
  13   1              DS18B20_PORT=0; 
  14   1              //// 480us 到 960us 均可
  15   1              delay_10us(75); 
  16   1              //// 电阻上拉，MCU 释放总线, DQ = 1
  17   1              DS18B20_PORT=1; 
  18   1              //// 延时20uS，根据时序图，选择5-60us均可
  19   1              delay_10us(2);  
  20   1              
  21   1              //// 现在总线归属权属于 DS18B20
  22   1      }
  23          
  24          /*******************************************************************************
  25          * 函 数 名         : ds18b20_check
  26          * 函数功能                 : 检测DS18B20是否存在
  27          * 输    入         : 无
  28          * 输    出         : 1:未检测到DS18B20的存在，0:存在
  29          *******************************************************************************/
  30          u8 ds18b20_check(void)
  31          {
  32   1              u8 time_temp=0;
  33   1              //// 满足 60us<延时<240us, 等待DQ为低电平
  34   1              //// 或者说是检测  DS18 是否占用总线, 发送低电平应答信号
  35   1              while(DS18B20_PORT&&time_temp<20)       
  36   1              {
  37   2                      time_temp++;
  38   2                      delay_10us(1);  
  39   2              }
  40   1              if(time_temp>=20) return 1;     //如果超时则强制返回1
  41   1              else time_temp=0;
  42   1              
  43   1              //// 检测 DS18 是否释放总线
  44   1              while((!DS18B20_PORT)&&time_temp<20)    //等待DQ为高电平
  45   1              {
  46   2                      time_temp++;
  47   2                      delay_10us(1);
  48   2              }
  49   1              if(time_temp>=20) return 1;     //如果超时则强制返回1
  50   1              return 0;
  51   1      }
  52          
  53          /*******************************************************************************
  54          * 函 数 名         : ds18b20_read_bit
C51 COMPILER V9.54   DS18                                                                  06/03/2024 10:47:42 PAGE 2   

  55          * 函数功能                 : 从DS18B20读取一个位
  56          * 输    入         : 无
  57          * 输    出         : 1/0
  58          *******************************************************************************/
  59          u8 ds18b20_read_bit(void)
  60          {
  61   1              u8 dat=0;
  62   1              
  63   1              DS18B20_PORT=0;
  64   1              _nop_();_nop_();
  65   1              DS18B20_PORT=1; 
  66   1              //// 为了让数据稳定，同时满足马上数据采样
  67   1              _nop_();_nop_(); //该段时间不能过长，必须在15us内读取数据
  68   1              if(DS18B20_PORT)dat=1;  //如果总线上为1则数据dat为1，否则为0
  69   1              else dat=0;
  70   1              delay_10us(5);
  71   1              return dat;
  72   1      } 
  73          
  74          /*******************************************************************************
  75          * 函 数 名         : ds18b20_read_byte
  76          * 函数功能                 : 从DS18B20读取一个字节
  77          * 输    入         : 无
  78          * 输    出         : 一个字节数据
  79          *******************************************************************************/
  80          u8 ds18b20_read_byte(void)
  81          {
  82   1              u8 i=0;
  83   1              u8 dat=0;
  84   1              u8 temp=0;
  85   1      
  86   1              for(i=0;i<8;i++)//循环8次，每次读取一位，且先读低位再读高位
  87   1              {
  88   2                      temp=ds18b20_read_bit();
  89   2                      dat=(temp<<7)|(dat>>1);
  90   2              }
  91   1              return dat;     
  92   1      }
  93          
  94          /*******************************************************************************
  95          * 函 数 名         : ds18b20_write_byte
  96          * 函数功能                 : MCU写一个字节到DS18B20
  97          * 输    入         : dat：要写入的字节
  98          * 输    出         : 无
  99          *******************************************************************************/
 100          void ds18b20_write_byte(u8 dat)
 101          {
 102   1              u8 i=0;
 103   1              u8 temp=0;
 104   1      
 105   1              for(i=0;i<8;i++)//循环8次，每次写一位，且先写低位再写高位
 106   1              {
 107   2                      temp=dat&0x01;//选择低位准备写入
 108   2                      dat>>=1;//将次高位移到低位
 109   2                      if(temp)
 110   2                      {
 111   3                              //// 根据时序图, MCU 拉低总线
 112   3                              DS18B20_PORT=0;
 113   3                              //// 满足 >1us 即可, 我们延时 2us
 114   3                              _nop_();_nop_();
 115   3                              DS18B20_PORT=1; 
 116   3                              delay_10us(6);
C51 COMPILER V9.54   DS18                                                                  06/03/2024 10:47:42 PAGE 3   

 117   3                      }
 118   2                      else
 119   2                      {
 120   3                              //// 拉低总线
 121   3                              DS18B20_PORT=0;
 122   3                              //// 延时
 123   3                              delay_10us(6);
 124   3                              DS18B20_PORT=1;
 125   3                              _nop_();_nop_();        
 126   3                      }       
 127   2              }       
 128   1      }
 129          
 130          /*******************************************************************************
 131          * 函 数 名         : ds18b20_start
 132          * 函数功能                 : 开始温度转换
 133          * 输    入         : 无
 134          * 输    出         : 无
 135          *******************************************************************************/
 136          void ds18b20_start(void)
 137          {
 138   1              ds18b20_reset();//复位
 139   1              ds18b20_check();//检查DS18B20
 140   1              ds18b20_write_byte(0xcc);//SKIP ROM
 141   1          ds18b20_write_byte(0x44);//转换命令 
 142   1      }
 143          
 144          /*******************************************************************************
 145          * 函 数 名         : ds18b20_init
 146          * 函数功能                 : 初始化DS18B20的IO口 DQ 同时检测DS的存在
 147          * 输    入         : 无
 148          * 输    出         : 1:不存在，0:存在
 149          *******************************************************************************/ 
 150          u8 ds18b20_init(void)
 151          {
 152   1              ds18b20_reset();
 153   1              return ds18b20_check(); 
 154   1      }
 155          
 156          /*******************************************************************************
 157          * 函 数 名         : ds18b20_read_temperture
 158          * 函数功能                 : 从ds18b20得到温度值
 159          * 输    入         : 无
 160          * 输    出         : 温度数据
 161          DS18B20 的典型温度读取过程为：复位→发 SKIP ROM 命令（0XCC）→发开始转 换命令（0X44）→延时→复位
 162          →发送 SKIP ROM 命令（0XCC）→发读存储器命令 （0XBE）→连续读出两个字节数据(即温度)→结束。
 163          *******************************************************************************/
 164          
 165          
 166          float ds18b20_read_temperture(void)
 167          {
 168   1              float temp;
 169   1              u8 dath=0;
 170   1              u8 datl=0;
 171   1              u16 value=0;
 172   1      
 173   1              ds18b20_start();//开始转换
 174   1              ds18b20_reset();//复位
 175   1              ds18b20_check();
 176   1              ds18b20_write_byte(0xcc);//SKIP ROM
 177   1          ds18b20_write_byte(0xbe);//读存储器
 178   1      
C51 COMPILER V9.54   DS18                                                                  06/03/2024 10:47:42 PAGE 4   

 179   1              datl=ds18b20_read_byte();//低字节
 180   1              dath=ds18b20_read_byte();//高字节
 181   1              value=(dath<<8)+datl;//合并为16位数据
 182   1      
 183   1              if((value&0xf800)==0xf800)//判断符号位，负温度
 184   1              {
 185   2                      value=(~value)+1; //数据取反再加1
 186   2                      temp=value*(-0.0625);//乘以精度 
 187   2              }
 188   1              else //正温度
 189   1              {
 190   2                      temp=value*0.0625;      
 191   2              }
 192   1              return temp;
 193   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    368    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
