C51 COMPILER V9.54   LCD1602                                                               05/14/2024 19:58:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Obj\lcd1602.obj
COMPILER INVOKED BY: E:\KeilC51\C51\BIN\C51.EXE App\lcd1602\lcd1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App\24c02;.\App\
                    -iic;.\App\key;.\App\smg;.\Public;.\App\ds18b20;.\App\ds1302;.\App\ired;.\App\time;.\App\xpt2046;.\App\pwm;.\App\lcd1602)
                    - DEBUG OBJECTEXTEND PRINT(.\Obj\lcd1602.lst) OBJECT(.\Obj\lcd1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          
   3          
   4          /*******************************************************************************
   5          * 函 数 名       : lcd1602_write_cmd
   6          * 函数功能               : LCD1602写命令
   7          * 输    入       : cmd：指令
   8          * 输    出       : 无
   9          
  10          *******************************************************************************/
  11          #if (LCD1602_4OR8_DATA_INTERFACE==0)//8位LCD ：QUST 采用 8 位
  12          void lcd1602_write_cmd(u8 cmd)
  13          {
  14   1              // 可以查询 lcd1602 时序图的 写时序来进行编码
  15   1              LCD1602_RS=0;//选择命令
  16   1              LCD1602_RW=0;//选择写
  17   1              LCD1602_E=0;
  18   1              LCD1602_DATAPORT=cmd;//准备命令
  19   1              delay_ms(1);
  20   1              LCD1602_E=1;//使能脚E先上升沿写入
  21   1              delay_ms(1);
  22   1              LCD1602_E=0;//使能脚E后负跳变完成写入   
  23   1      }
  24          #else   //4位LCD
              void lcd1602_write_cmd(u8 cmd)
              {
                      LCD1602_RS=0;//选择命令
                      LCD1602_RW=0;//选择写
                      LCD1602_E=0;
                      LCD1602_DATAPORT=cmd;//准备命令
                      delay_ms(1);
                      LCD1602_E=1;//使能脚E先上升沿写入
                      delay_ms(1);
                      LCD1602_E=0;//使能脚E后负跳变完成写入
                      
                      LCD1602_DATAPORT=cmd<<4;//准备命令
                      delay_ms(1);
                      LCD1602_E=1;//使能脚E先上升沿写入
                      delay_ms(1);
                      LCD1602_E=0;//使能脚E后负跳变完成写入   
              }
              #endif
  43          
  44          /*******************************************************************************
  45          * 函 数 名       : lcd1602_write_data
  46          * 函数功能               : LCD1602写数据
  47          * 输    入       : dat：数据
  48          * 输    出       : 无
  49          *******************************************************************************/
  50          #if (LCD1602_4OR8_DATA_INTERFACE==0)//8位LCD
  51          void lcd1602_write_data(u8 dat) 
  52          {
  53   1              LCD1602_RS=1;//选择数据
C51 COMPILER V9.54   LCD1602                                                               05/14/2024 19:58:19 PAGE 2   

  54   1              LCD1602_RW=0;//选择写
  55   1              LCD1602_E=0;
  56   1              LCD1602_DATAPORT=dat;//准备数据
  57   1              delay_ms(1);
  58   1              LCD1602_E=1;//使能脚E先上升沿写入
  59   1              delay_ms(1);
  60   1              LCD1602_E=0;//使能脚E后负跳变完成写入           
  61   1      }
  62          #else
              void lcd1602_write_data(u8 dat) 
              {
                      LCD1602_RS=1;//选择数据
                      LCD1602_RW=0;//选择写
                      LCD1602_E=0;
                      LCD1602_DATAPORT=dat;//准备数据
                      delay_ms(1);
                      LCD1602_E=1;//使能脚E先上升沿写入
                      delay_ms(1);
                      LCD1602_E=0;//使能脚E后负跳变完成写入
                      
                      LCD1602_DATAPORT=dat<<4;//准备数据
                      delay_ms(1);
                      LCD1602_E=1;//使能脚E先上升沿写入
                      delay_ms(1);
                      LCD1602_E=0;//使能脚E后负跳变完成写入           
              }
              #endif
  81          
  82          /*******************************************************************************
  83          * 函 数 名       : lcd1602_init
  84          * 函数功能               : LCD1602初始化
  85          * 输    入       : 无
  86          * 输    出       : 无
  87          *******************************************************************************/
  88          #if (LCD1602_4OR8_DATA_INTERFACE==0)//8位LCD
  89          void lcd1602_init(void)
  90          {
  91   1              lcd1602_write_cmd(0x38);//数据总线8位，显示2行，5*7点阵/字符
  92   1              lcd1602_write_cmd(0x0c);//显示功能开，无光标，光标闪烁
  93   1              lcd1602_write_cmd(0x06);//写入新数据后光标右移，显示屏不移动
  94   1              lcd1602_write_cmd(0x01);//清屏  
  95   1      }
  96          #else
              void lcd1602_init(void)
              {
                      lcd1602_write_cmd(0x28);//数据总线4位，显示2行，5*7点阵/字符
                      lcd1602_write_cmd(0x0c);//显示功能开，无光标，光标闪烁
                      lcd1602_write_cmd(0x06);//写入新数据后光标右移，显示屏不移动
                      lcd1602_write_cmd(0x01);//清屏  
              }
              #endif
 105          
 106          /*******************************************************************************
 107          * 函 数 名       : lcd1602_clear
 108          * 函数功能               : LCD1602清屏
 109          * 输    入       : 无
 110          * 输    出       : 无
 111          *******************************************************************************/
 112          void lcd1602_clear(void)
 113          {
 114   1              lcd1602_write_cmd(0x01);        
 115   1      }
C51 COMPILER V9.54   LCD1602                                                               05/14/2024 19:58:19 PAGE 3   

 116          
 117          /*******************************************************************************
 118          * 函 数 名       : lcd1602_show_string
 119          * 函数功能               : LCD1602显示字符
 120          * 输    入       : x,y：显示坐标，x=0~15，y=0~1;
 121                                             str：显示字符串
 122          * 输    出       : 无
 123          *******************************************************************************/
 124          void lcd1602_show_string(u8 x,u8 y,u8 *str)
 125          {
 126   1              u8 i=0;
 127   1      
 128   1              if(y>1||x>15)return;//行列参数不对则强制退出
 129   1      
 130   1              if(y<1) //第1行显示
 131   1              {       
 132   2                      while(*str!='\0')//字符串是以'\0'结尾，只要前面有内容就显示
 133   2                      {
 134   3                              if(i<16-x)//如果字符长度超过第一行显示范围，则在第二行继续显示
 135   3                              {
 136   4                                      lcd1602_write_cmd(0x80+i+x);//第一行显示地址设置        
 137   4                              }
 138   3                              else
 139   3                              {
 140   4                                      lcd1602_write_cmd(0x40+0x80+i+x-16);//第二行显示地址设置        
 141   4                              }
 142   3                              lcd1602_write_data(*str);//显示内容
 143   3                              str++;//指针递增
 144   3                              i++;    
 145   3                      }       
 146   2              }
 147   1              else    //第2行显示
 148   1              {
 149   2                      while(*str!='\0')
 150   2                      {
 151   3                              if(i<16-x) //如果字符长度超过第二行显示范围，则在第一行继续显示
 152   3                              {
 153   4                                      lcd1602_write_cmd(0x80+0x40+i+x);       
 154   4                              }
 155   3                              else
 156   3                              {
 157   4                                      lcd1602_write_cmd(0x80+i+x-16); 
 158   4                              }
 159   3                              lcd1602_write_data(*str);
 160   3                              str++;
 161   3                              i++;    
 162   3                      }       
 163   2              }                               
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    236    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
